#!/usr/bin/python
{
	# OpenStack Swift Daemons
	"user": "swift",
	"group": "swift",
	"user_home": "/var/lib/swift",

	# Magic suffix
	"hash": "4d50ab1f-4f8c-4049-8bdc-4cf70e918982",

	# Objects root directory
	"mount_point": "/mnt/sdb1",

	# Swift config directory (default: /etc/swift)
	"ring_dir": "/etc/swift",

	# Standard extension for ring builder files.
	"ring_builder_ext": ".builder",

	# Standard extension for ring files.
	"ring_file_ext": ".ring.gz",

	# The Proxy Server is responsible for tying together
	# the rest of the Swift architecture.
	"proxy": {
		"port": 6003,
		"workers": 5,
		"hosts": [ "server1", "server2", "server3" ]
	},

	# The Object Server is a very simple blob storage server that can store,
	# retrieve and delete objects stored on local devices.
	"object": {
		"port": 6000,
		"part_power": 18,
		"replicas": 1,
		"min_part_hours": 1,
		"zones": {
			"1": {
				"server1": { "ip": "<IPADDR-1>", "disk": "sdb1", "weight": 100 },
				"server2": { "ip": "<IPADDR-2>", "disk": "sdb1", "weight": 100 },
				"server3": { "ip": "<IPADDR-3>", "disk": "sdb1", "weight": 100 },
			},
		},
	},

	# The Container Server’s primary job is to handle listings of objects.
	# It doesn’t know where those object’s are, just what objects are in
	# a specific container.
	"container": {
		"port": 6001,
		"part_power": 18,
		"replicas": 1,
		"min_part_hours": 1,
		"zones": {
			"1": {
				"server1": { "ip": "<IPADDR-1>", "disk": "sdb1", "weight": 100 },
				"server2": { "ip": "<IPADDR-2>", "disk": "sdb1", "weight": 100 },
				"server3": { "ip": "<IPADDR-3>", "disk": "sdb1", "weight": 100 },
			},
		},
	},

	# The Account Server is responsible for listings of containers rather
	# than objects.
	"account": {
		"port": 6002,
		"part_power": 18,
		"replicas": 1,
		"min_part_hours": 1,
		"zones": {
			"1": {
				"server1": { "ip": "<IPADDR-1>", "disk": "sdb1", "weight": 100 },
				"server2": { "ip": "<IPADDR-2>", "disk": "sdb1", "weight": 100 },
				"server3": { "ip": "<IPADDR-3>", "disk": "sdb1", "weight": 100 },
			},
		},
	},
}
